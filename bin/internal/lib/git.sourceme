#!/bin/bash

GIT_MIRROR_TMP="$(pwd)/tmp/mirror"

git_mirror_cleanup() {
    rm -rf "$GIT_MIRROR_TMP"
}

git_mirror() {
    git_mirror_cleanup
    mkdir -p "$GIT_MIRROR_TMP"
    cd "$GIT_MIRROR_TMP"

    local FROM_REPOSITORY="${1#https://}"
    local FROM_USER="$2"
    local FROM_PASSWORD="$3"
    local TO_REPOSITORY="${4#https://}"
    local TO_USER="$5"
    local TO_PASSWORD="$6"

    #trap 'git_mirror_cleanup' TERM INT EXIT

    if [ "$FROM_USER" != "" ]; then
        FROM_CREDENTIALS="$FROM_USER:$FROM_PASSWORD@"
    fi

    if [ "$TO_USER" != "" ]; then
        TO_CREDENTIALS="$TO_USER:$TO_PASSWORD@"
    fi

    local FROM_REPO_NAME="$(basename $FROM_REPOSITORY)"

    echo "[INFO] Mirroring https://$FROM_REPOSITORY => https://$TO_REPOSITORY"

    echo "https://${FROM_CREDENTIALS}${FROM_REPOSITORY}"
    echo "https://${TO_CREDENTIALS}${TO_REPOSITORY}"

    git clone --bare "https://${FROM_CREDENTIALS}${FROM_REPOSITORY}" "$FROM_REPO_NAME"
    cd "$FROM_REPO_NAME"
    git push --mirror "https://${TO_CREDENTIALS}${TO_REPOSITORY}"

#    git clone --mirror "${FROM_CREDENTIALS}${FROM_REPOSITORY}" "$FROM_REPO_NAME"
#    cd $FROM_REPO_NAME

#    mkdir $FROM_REPO_NAME
#    git init
#    git remote add origin "${FROM_CREDENTIALS}${FROM_REPOSITORY}"
#    git fetch origin refs/heads/*:refs/remotes/origin/*

#    for BRANCH in $(git branch -a | grep remotes/origin/); do
#        BRANCH=${BRANCH#remotes/origin/}
#        git checkout $BRANCH
#        git push "${TO_CREDENTIALS}${TO_REPOSITORY}"
#    done
}